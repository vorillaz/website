---
import type { CollectionEntry } from "astro:content";
import { slugify } from "@/lib/utils";
import Img from "./Img.astro";
import Note from "./Note.astro";
import Code from "./CodeHeader.astro";
import PostLayout from "@/layouts/PostLayout.astro";
import PostViews from "./PostViews.astro";
import InlineCode from "./InlineCode.astro";

export interface Props {
  post: CollectionEntry<"generative">;
}
const { post } = Astro.props;
const { Content } = await post.render();
const { title, heroImage, pubDate, updatedDate, fork } = post.data;

const pubstr = pubDate.toISOString();
const updatedstr = updatedDate?.toISOString();
---

<PostLayout title={title} isArt={false}>
  <article id="article" role="article" class="content">
    <h1 transition:name={slugify(title)} class="post-title">{title}</h1>
    <!-- Date and time -->
    <p class="post-info gap-1">
      <span>
        Published on{" "}
        <time datetime={pubstr}>
          {
            new Date(pubDate).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </time>
      </span>
      {
        updatedDate && (
          <span>
            &middot; Updated on{" "}
            <time datetime={updatedstr}>
              {new Date(updatedDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })}
            </time>
          </span>
        )
      }
      <PostViews slug={post.slug} />
    </p>
    <>
      {heroImage && <Img src={heroImage} alt={`img of ${title}`} />}
    </>
    <Content
      components={{
        Note,
        img: Img,
        "custom-code-renderer": Code,
        "inline-code": InlineCode,
      }}
    />

    {
      fork && fork.length > 0 && (
        <>
          <h2>Fork</h2>
          <ul>
            {fork.map((f) => (
              <li>
                <a href={f.url} target="_blank" rel="noopener noreferrer">
                  <span>{f.title}</span>
                </a>
              </li>
            ))}
          </ul>
        </>
      )
    }
  </article>
</PostLayout>
